'use strict';

// messages file storage
var fs = require('fs');
var msgFile = 'server/messages.json';

// express
var express = require('express');
var app = express();

// express body parser
var bodyParser = require('body-parser');
app.use(bodyParser.json()); // support json encoded bodies
app.use(bodyParser.urlencoded({ extended: true })); // support encoded bodies

app.route('/classes/messages').get(function (req, res) {
  res.send('query', req.query);
}).post(function (req, res) {
  // createdAt, roomname, username, text
  var message = {
    createdAt: Date.now(),
    roomname: req.body.roomname || '',
    username: req.body.username || '',
    text: req.body.text || ''
  };

  fs.appendFile(msgFile, JSON.stringify(message) + '\n', function (err) {
    if (err) {
      throw err;
    }
  });

  res.send();
});

app.listen(3000, function () {
  console.log('Example app on 3000');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci1zcmMvc2VydmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLElBQUksS0FBSyxRQUFRLElBQVIsQ0FBVDtBQUNBLElBQUksVUFBVSxzQkFBZDs7O0FBR0EsSUFBSSxVQUFVLFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSSxNQUFNLFNBQVY7OztBQUdBLElBQUksYUFBYSxRQUFRLGFBQVIsQ0FBakI7QUFDQSxJQUFJLEdBQUosQ0FBUSxXQUFXLElBQVgsRUFBUixFO0FBQ0EsSUFBSSxHQUFKLENBQVEsV0FBVyxVQUFYLENBQXNCLEVBQUUsVUFBVSxJQUFaLEVBQXRCLENBQVIsRTs7QUFFQSxJQUFJLEtBQUosQ0FBVSxtQkFBVixFQUNHLEdBREgsQ0FDTyxVQUFTLEdBQVQsRUFBYyxHQUFkLEVBQW1CO0FBQ3RCLE1BQUksSUFBSixDQUFTLE9BQVQsRUFBa0IsSUFBSSxLQUF0QjtBQUNELENBSEgsRUFJRyxJQUpILENBSVEsVUFBUyxHQUFULEVBQWMsR0FBZCxFQUFtQjs7QUFFdkIsTUFBSSxVQUFVO0FBQ1osZUFBVyxLQUFLLEdBQUwsRUFEQztBQUVaLGNBQVUsSUFBSSxJQUFKLENBQVMsUUFBVCxJQUFxQixFQUZuQjtBQUdaLGNBQVUsSUFBSSxJQUFKLENBQVMsUUFBVCxJQUFxQixFQUhuQjtBQUlaLFVBQU0sSUFBSSxJQUFKLENBQVMsSUFBVCxJQUFpQjtBQUpYLEdBQWQ7O0FBT0EsS0FBRyxVQUFILENBQWMsT0FBZCxFQUF1QixLQUFLLFNBQUwsQ0FBZSxPQUFmLElBQTBCLElBQWpELEVBQXVELFVBQVUsR0FBVixFQUFlO0FBQ3BFLFFBQUksR0FBSixFQUFTO0FBQUUsWUFBTSxHQUFOO0FBQVk7QUFDeEIsR0FGRDs7QUFJQSxNQUFJLElBQUo7QUFDRCxDQWxCSDs7QUFxQkEsSUFBSSxNQUFKLENBQVcsSUFBWCxFQUFpQixZQUFXO0FBQzFCLFVBQVEsR0FBUixDQUFZLHFCQUFaO0FBQ0QsQ0FGRCIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtZXNzYWdlcyBmaWxlIHN0b3JhZ2VcbmxldCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5sZXQgbXNnRmlsZSA9ICdzZXJ2ZXIvbWVzc2FnZXMuanNvbic7XG5cbi8vIGV4cHJlc3NcbmxldCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xubGV0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gZXhwcmVzcyBib2R5IHBhcnNlclxudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7IC8vIHN1cHBvcnQganNvbiBlbmNvZGVkIGJvZGllc1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7IC8vIHN1cHBvcnQgZW5jb2RlZCBib2RpZXNcblxuYXBwLnJvdXRlKCcvY2xhc3Nlcy9tZXNzYWdlcycpXG4gIC5nZXQoZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICByZXMuc2VuZCgncXVlcnknLCByZXEucXVlcnkpO1xuICB9KVxuICAucG9zdChmdW5jdGlvbihyZXEsIHJlcykge1xuICAgIC8vIGNyZWF0ZWRBdCwgcm9vbW5hbWUsIHVzZXJuYW1lLCB0ZXh0XG4gICAgbGV0IG1lc3NhZ2UgPSB7XG4gICAgICBjcmVhdGVkQXQ6IERhdGUubm93KCksXG4gICAgICByb29tbmFtZTogcmVxLmJvZHkucm9vbW5hbWUgfHwgJycsXG4gICAgICB1c2VybmFtZTogcmVxLmJvZHkudXNlcm5hbWUgfHwgJycsXG4gICAgICB0ZXh0OiByZXEuYm9keS50ZXh0IHx8ICcnXG4gICAgfTtcblxuICAgIGZzLmFwcGVuZEZpbGUobXNnRmlsZSwgSlNPTi5zdHJpbmdpZnkobWVzc2FnZSkgKyAnXFxuJywgZnVuY3Rpb24gKGVycikge1xuICAgICAgaWYgKGVycikgeyB0aHJvdyBlcnI7IH1cbiAgICB9KTtcblxuICAgIHJlcy5zZW5kKCk7XG4gIH0pO1xuXG5cbmFwcC5saXN0ZW4oMzAwMCwgZnVuY3Rpb24oKSB7XG4gIGNvbnNvbGUubG9nKCdFeGFtcGxlIGFwcCBvbiAzMDAwJyk7XG59KTtcbiJdfQ==